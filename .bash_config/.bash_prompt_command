# bash escape sequences
# can be written 3 ways, \e \033 \x1B	
# bash needs to wrap these with \[...\] 
# otherwise the prompt will wrap thinking its longer than it is

# 16-bit ANSI Colors
#BLACK="\[\e[0;30m\]"
#RED="\[\e[0;31m\]"
#GREEN="\[\e[0;32m\]"
#YELLOW="\[\e[38;5;226m\]"
#BLUE="\[\e[0;34m\]"
#PURPLE="\[\e[0;35m\]"
#CYAN="\[\e[0;36m\]"
#WHITE="\[\e[0;37m\]"
#BOLD_BLUE="\[\e[1;34m\]"
#BOLD_GREEN="\[\e[1;32m\]"
#BOLD_PURPLE="\[\e[1;35m\]"
#BOLD_CYAN="\[\e[1;36m\]"
#BOLD_RED="\[\e[1;31m\]"
#RESTORE="\[\e[0m\]"

# 256-bit ANSI Colors
BLACK="\[\e[38;5;232m\]"
RED="\[\e[38;5;196m\]"
GREEN="\[\e[38;5;77m\]"
YELLOW="\[\e[38;5;227m\]"
ORANGE="\[\e[38;5;202m\]"
BLUE="\[\e[38;5;4m\]"
PURPLE="\[\e[38;5;165m\]"
PINK="\[\e[38;5;201m\]"
CYAN="\[\e[38;5;51m\]"
WHITE="\[\e[38;5;255m\]"
RESTORE="\[\e[0m\]"

if [ -z $SCHROOT_CHROOT_NAME ]; then
    SCHROOT_CHROOT_NAME=" "
fi

BRANCH=""
ERRMSG=""
RET=$1

if [[ $RET != 0 ]]; then
    ERRMSG=" $RET"
fi


if which git &>/dev/null; then
    BRANCH="$(git branch 2>/dev/null | grep \* |  cut -d ' ' -f 2)"
else
    BRANCH=""
fi

if [ $RET != 0 ]; then
		echo "${RED}\u \h${SCHROOT_CHROOT_NAME}\w ${BRANCH}${ERRMSG} ${WHITE}\$ $RESTORE"
else
		echo "${YELLOW}\u ${GREEN}\h${SCHROOT_CHROOT_NAME}${BLUE}\w ${CYAN}${BRANCH}${WHITE}\$ $RESTORE"
fi 
